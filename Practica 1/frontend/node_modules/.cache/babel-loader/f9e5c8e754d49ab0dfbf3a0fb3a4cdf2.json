{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i_smi\\\\OneDrive\\\\Escritorio\\\\U\\\\Sopes2\\\\Lab\\\\SistemasOperativos2\\\\Practica 1\\\\frontend\\\\src\\\\components\\\\Navbars\\\\DemoNavbar.js\",\n    _s = $RefreshSig$();\n\n/*!\r\n\r\n=========================================================\r\n* Now UI Dashboard React - v1.5.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, InputGroup, InputGroupText, InputGroupAddon, Input } from \"reactstrap\";\nimport routes from \"routes.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DemoNavbar(props) {\n  _s();\n\n  const location = useLocation();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n\n  const toggle = () => {\n    if (isOpen) {\n      setColor(\"transparent\");\n    } else {\n      setColor(\"white\");\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const dropdownToggle = e => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  const getBrand = () => {\n    var name;\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n\n      return null;\n    });\n    return name;\n  };\n\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  }; // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"white\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n  }, []);\n  React.useEffect(() => {\n    if (window.innerWidth < 993 && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return (\n    /*#__PURE__*/\n    // add or remove classes depending if we are on full-screen-maps page or not\n    _jsxDEV(Navbar, {\n      color: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"white\" : color,\n      expand: \"lg\",\n      className: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: isOpen,\n          navbar: true,\n          className: \"justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            navbar: true,\n            children: /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                className: \"nav-link\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"now-ui-icons media-2_sound-wave\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-lg-none d-md-block\",\n                    children: \"Stats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 19\n                  }, this), \"Grupo No.23\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(DemoNavbar, \"bW78OSO/vTJ9PTt7humJCvZTBDs=\", false, function () {\n  return [useLocation];\n});\n\n_c = DemoNavbar;\nexport default DemoNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoNavbar\");","map":{"version":3,"sources":["C:/Users/i_smi/OneDrive/Escritorio/U/Sopes2/Lab/SistemasOperativos2/Practica 1/frontend/src/components/Navbars/DemoNavbar.js"],"names":["React","Link","useLocation","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Container","InputGroup","InputGroupText","InputGroupAddon","Input","routes","DemoNavbar","props","location","isOpen","setIsOpen","useState","dropdownOpen","setDropdownOpen","color","setColor","sidebarToggle","useRef","toggle","dropdownToggle","e","getBrand","name","map","prop","key","collapse","views","path","pathname","redirect","openSidebar","document","documentElement","classList","current","updateColor","window","innerWidth","useEffect","addEventListener","className","indexOf"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Now UI Dashboard React - v1.5.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nfunction DemoNavbar(props) {\r\n  const location = useLocation();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [color, setColor] = React.useState(\"transparent\");\r\n  const sidebarToggle = React.useRef();\r\n  const toggle = () => {\r\n    if (isOpen) {\r\n      setColor(\"transparent\");\r\n    } else {\r\n      setColor(\"white\");\r\n    }\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const dropdownToggle = (e) => {\r\n    setDropdownOpen(!dropdownOpen);\r\n  };\r\n  const getBrand = () => {\r\n    var name;\r\n    routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        prop.views.map((prop, key) => {\r\n          if (prop.path === props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n          return null;\r\n        });\r\n      } else {\r\n        if (prop.redirect) {\r\n          if (prop.path === props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        } else {\r\n          if (prop.path === props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  };\r\n  const openSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    sidebarToggle.current.classList.toggle(\"toggled\");\r\n  };\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  const updateColor = () => {\r\n    if (window.innerWidth < 993 && isOpen) {\r\n      setColor(\"white\");\r\n    } else {\r\n      setColor(\"transparent\");\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateColor);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n      sidebarToggle.current.classList.toggle(\"toggled\");\r\n    }\r\n  }, [location]);\r\n  return (\r\n    // add or remove classes depending if we are on full-screen-maps page or not\r\n    <Navbar\r\n      color={\r\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n          ? \"white\"\r\n          : color\r\n      }\r\n      expand=\"lg\"\r\n      className={\r\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\r\n          ? \"navbar-absolute fixed-top\"\r\n          : \"navbar-absolute fixed-top \" +\r\n            (color === \"transparent\" ? \"navbar-transparent \" : \"\")\r\n      }\r\n    >\r\n      <Container fluid>\r\n        \r\n        <Collapse isOpen={isOpen} navbar className=\"justify-content-end\">\r\n         \r\n          <Nav navbar>\r\n            <NavItem>\r\n              <Link to=\"#\" className=\"nav-link\">\r\n                <i className=\"now-ui-icons media-2_sound-wave\" />\r\n                <p>\r\n                  <span className=\"d-lg-none d-md-block\">Stats</span>\r\n                  Grupo No.23\r\n                </p>\r\n              </Link>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default DemoNavbar;\r\n"]},"metadata":{},"sourceType":"module"}