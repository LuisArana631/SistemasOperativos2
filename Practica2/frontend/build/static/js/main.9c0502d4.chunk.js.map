{"version":3,"sources":["types/types.js","reducers/mascotaReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/mascota.js","components/mascota/AddForm/AddForm.js","components/mascota/EditForm/EditForm.js","actions/ui.js","components/mascota/TableView/TableView.js","components/ui/Navbar.js","Mascotas.js","index.js"],"names":["types","initialState","mascotas","actualMascota","modalOpen","rootReducer","combineReducers","ui","state","action","type","mascota","payload","filter","e","id","map","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","fetchManage","endpoint","body","method","url","fetch","headers","JSON","stringify","mascotaAddView","mascotaUpdated","mascotaDeleted","initForm","dueño","edad","AddForm","dispatch","useDispatch","useState","formValues","setFormValues","handleChange","target","name","value","className","onSubmit","preventDefault","trim","length","Swal","fire","a","resp","json","status","mascotaAddNew","onChange","placeholder","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","EditMascota","useSelector","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","mascotaUpdateItem","TableView","editItem","mascotaSetItem","eliminarItem","mascotaDeleteItem","scope","mascotaItem","onClick","Navbar","src","alt","width","height","Mascotas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c0502d4.chunk.js","sourcesContent":["export const types = {\r\n    // Tipos para manejar modal\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    // Tipos para manejar las mascotas\r\n    mascotaAddNew: '[mascota] Add New',\r\n    mascotaSetItem: '[mascota] Set Item Active',\r\n    mascotaEditItem: '[mascota] Edit Item',\r\n    mascotaDeleteItem: '[mascota] Delte Item',\r\n    mascotaLoaded: '[mascota] Mascota Cargada'\r\n}","import { types } from \"../types/types\";\r\n\r\n/*{\r\n    id: 1,\r\n    mascota: \"Luis\",\r\n    dueño: \"UWU\",\r\n    edad: '23'\r\n},{\r\n    id: 2,\r\n    mascota: \"Terry\",\r\n    dueño: \"Luis\",\r\n    edad: '2'\r\n}*/\r\n\r\nconst initialState = {\r\n    mascotas: [],\r\n    actualMascota: null\r\n};\r\n\r\nexport const mascotaReducer = ( state = initialState, action  ) => {\r\n    switch (action.type) {\r\n        case types.mascotaSetItem:\r\n            return {\r\n                ...state,\r\n                actualMascota: action.payload\r\n            }\r\n        case types.mascotaAddNew:\r\n            return {\r\n                ...state,\r\n                mascotas: [\r\n                    ...state.mascotas,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.mascotaDeleteItem:\r\n            return {\r\n                ...state,\r\n                mascotas: state.mascotas.filter(\r\n                    e => (e.id !== action.payload.id) \r\n                ), actualMascota: null\r\n            }\r\n        case types.mascotaLoaded:\r\n            return {\r\n                ...state,\r\n                mascotas: [ ...action.payload ]\r\n            }\r\n        case types.mascotaEditItem:\r\n            return {\r\n                ...state,\r\n                mascotas: state.mascotas.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { mascotaReducer } from './mascotaReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers ({\r\n    ui: uiReducer,\r\n    mascota: mascotaReducer\r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const fetchManage = ( endpoint, body, method = 'GET' ) => {\r\n    const url = 'http://localhost:3800/' + endpoint;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( body )\r\n        });\r\n    }\r\n        \r\n\r\n}\r\n\r\nexport {\r\n    fetchManage\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchManage } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\n\r\nconst mascotaAddView = (e) => ({\r\n    type: types.mascotaAddNew,\r\n    payload: e\r\n});\r\n\r\nexport const mascotaAddNew = (e) => {\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n            const resp = await fetchManage( 'mascota', e, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if(body.status){\r\n                dispatch(mascotaAddView(body.mascota));\r\n            }else{\r\n                Swal.fire('Error', 'Se produjo un error al cargar la mascota', 'error');\r\n            }\r\n\r\n        } catch (err) {\r\n            Swal.fire('Error', 'Se produjo un error al cargar la mascota', 'error');\r\n        }   \r\n\r\n    }\r\n};\r\n\r\nconst mascotaLoaded = (e) => ({\r\n    type: types.mascotaLoaded,\r\n    payload: e\r\n});\r\n\r\nexport const mascotaLoadItems = () => {\r\n    return async ( dispatch ) => {\r\n\r\n        try{\r\n            const resp = await fetchManage( 'mascota' );\r\n            const body = await resp.json(); \r\n\r\n            if(body.status) {\r\n                dispatch(mascotaLoaded(body.mascotas));\r\n            }else{\r\n                Swal.fire('Error', 'Se produjo un error al mostrar las mascotas', 'error');\r\n            }   \r\n\r\n        } catch (err) {\r\n            Swal.fire('Error', 'Se produjo un error al mostrar las mascotas', 'error');\r\n        }           \r\n    }\r\n}\r\n\r\nexport const mascotaSetItem = (e) => ({\r\n    type: types.mascotaSetItem,\r\n    payload: e\r\n});\r\n\r\nconst mascotaUpdated = (e) => ({\r\n    type: types.mascotaEditItem,\r\n    payload: e\r\n});\r\n\r\nexport const mascotaUpdateItem = (e) => {\r\n    return async(dispatch) => {\r\n        try{\r\n            const resp = await fetchManage( 'mascota/'+e.id , e, 'PUT' );\r\n            const body = await resp.json(); \r\n\r\n            if(body.status) {                \r\n                dispatch(mascotaUpdated(body.mascota));\r\n            }else{\r\n                Swal.fire('Error', 'Se produjo un error al editar la mascota', 'error');\r\n            }\r\n\r\n        }catch(err){\r\n            Swal.fire('Error', 'Se produjo un error al editar la mascota', 'error');\r\n        }\r\n    }\r\n};\r\n\r\nconst mascotaDeleted = (e) => ({\r\n    type: types.mascotaDeleteItem,\r\n    payload: e\r\n});\r\n\r\nexport const mascotaDeleteItem = (e) => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const resp = await fetchManage( 'mascota/'+e.id , {}, 'DELETE' );\r\n            const body = await resp.json(); \r\n\r\n            if(body.status) {                \r\n                dispatch(mascotaDeleted(e));\r\n            }else{\r\n                Swal.fire('Error', 'Se produjo un error al eliminar la mascota', 'error');\r\n            }\r\n        }catch(err){\r\n            Swal.fire('Error', 'Se produjo un error al eliminar la mascota', 'error');\r\n        }\r\n    }\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from 'sweetalert2';\r\nimport { mascotaAddNew } from \"../../../actions/mascota\";\r\nimport './AddForm.css';\r\n\r\nconst initForm = {\r\n    mascota: '',\r\n    dueño: '',\r\n    edad: ''\r\n};\r\n\r\nexport const AddForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, setFormValues] = useState(initForm);\r\n    \r\n    const { mascota, dueño, edad } = formValues;\r\n\r\n    const handleChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if ( mascota.trim().length < 1 ) {\r\n            return Swal.fire('Error', 'No puedes dejar el nombre de la mascota vacío', 'error');\r\n        }else if ( dueño.trim().length < 1 ) {\r\n            return Swal.fire('Error', 'No puedes dejar el nombre del dueño vacío', 'error');\r\n        }else if ( edad.trim().length < 1 ) {\r\n            return Swal.fire('Error', 'No puedes dejar la edad de la mascota vacío', 'error');\r\n        }\r\n\r\n        dispatch(mascotaAddNew(formValues)); \r\n\r\n        setFormValues(initForm);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row card card-body bg-green\">\r\n                <div className=\"col bg-green-2 add-form\">\r\n                    <h4 className=\"card-title pb-3\">Agregar una mascota</h4>\r\n                    <form\r\n                        onSubmit={ handleSubmit }\r\n                    >\r\n                        <div className=\"form-group row\">\r\n                            <i className=\"col-sm-1 col-form-label fa-solid fa-dog\"></i>\r\n                            <div className=\"col-sm-11\">                                   \r\n                                <input \r\n                                    type=\"text\" \r\n                                    name=\"mascota\" \r\n                                    className=\"form-control\" \r\n                                    value={mascota} \r\n                                    onChange={ handleChange } \r\n                                    placeholder=\"Nombre de la mascota\"\r\n                                />\r\n                            </div>                            \r\n                        </div>\r\n                        \r\n                        <div className=\"form-group row\">\r\n                            <i className=\"col-sm-1 col-form-label fa-solid fa-user\"></i>\r\n                            <div className=\"col-sm-11\"> \r\n                                <input \r\n                                    type=\"text\" \r\n                                    name=\"dueño\" \r\n                                    className=\"form-control\" \r\n                                    value={dueño} \r\n                                    onChange={ handleChange } \r\n                                    placeholder=\"Nombre del dueño\"\r\n                                />\r\n                            </div>                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <i  className=\"col-sm-1 col-form-label fa-solid fa-calendar\"></i>\r\n                            <div className=\"col-sm-9\"> \r\n                                <input \r\n                                    type=\"number\" \r\n                                    name=\"edad\" \r\n                                    className=\"form-control\" \r\n                                    value={edad} \r\n                                    onChange={ handleChange } \r\n                                    placeholder=\"Edad de la mascota\"\r\n                                />\r\n                            </div>                \r\n                            <label className=\"col-sm-2 col-form-label\"> <b>Años</b></label>            \r\n                        </div>   \r\n                        \r\n                        <hr/>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col text-center\">\r\n                                <button type=\"submit\" className=\"btn btn-success btnSubmit\">\r\n                                    Agregar Mascota\r\n                                </button>\r\n                            </div>                            \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from 'sweetalert2';\r\nimport { mascotaUpdateItem } from \"../../../actions/mascota\";\r\nimport { uiCloseModal } from \"../../../actions/ui\";\r\nimport './EditForm.css';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst initForm = {\r\n    mascota: '',\r\n    dueño: '',\r\n    edad: 0\r\n};\r\n\r\nexport const EditMascota = () => {\r\n\r\n    const { modalOpen } = useSelector(state =>  state.ui);\r\n    const { actualMascota } = useSelector(state => state.mascota)\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, setFormValues] = useState(initForm);\r\n    const { mascota, dueño, edad } = formValues;\r\n\r\n    useEffect(() => {\r\n        if( actualMascota ){\r\n            setFormValues(actualMascota);\r\n        }        \r\n    }, [actualMascota, setFormValues]);\r\n    \r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n    }\r\n\r\n    const handleChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( mascota.trim().length < 1 ) {\r\n            return Swal.fire('Error', 'No puedes dejar el nombre de la mascota vacío', 'error');\r\n        }else if ( dueño.trim().length < 1 ) {\r\n            return Swal.fire('Error', 'No puedes dejar el nombre del dueño vacío', 'error');\r\n        }else if ( edad <= 0 ) {\r\n            return Swal.fire('Error', 'No puedes dejar la edad de la mascota vacío', 'error');\r\n        }\r\n        \r\n        if ( actualMascota ){\r\n            dispatch(mascotaUpdateItem(formValues));\r\n        }\r\n        \r\n        setFormValues(initForm);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n                closeTimeoutMS={200}\r\n            >\r\n                <div className=\"container\">\r\n                    <div className=\"row bg-green\">\r\n                        <div className=\"col add-form\">\r\n                            <h4> Editar mascota </h4>\r\n                        </div>\r\n                    </div>       \r\n                    <div className=\"row pt-3\">\r\n                    <form \r\n                        className=\"container\"\r\n                        onSubmit={ handleSubmit }\r\n                    >\r\n                        <div className=\"form-group row\">\r\n                            <i className=\"col-sm-1 col-form-label fa-solid fa-dog\"></i>\r\n                            <div className=\"col-sm-11\">                                   \r\n                                <input \r\n                                    type=\"text\" \r\n                                    name=\"mascota\" \r\n                                    className=\"form-control\" \r\n                                    value={mascota} \r\n                                    onChange={ handleChange } \r\n                                    placeholder=\"Nombre de la mascota\"\r\n                                />\r\n                            </div>                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <i className=\"col-sm-1 col-form-label fa-solid fa-user\"></i>\r\n                            <div className=\"col-sm-11\"> \r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"dueño\" \r\n                                className=\"form-control\" \r\n                                value={dueño} \r\n                                onChange={ handleChange } \r\n                                placeholder=\"Nombre del dueño\"\r\n                            />\r\n                            </div>                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <i  className=\"col-sm-1 col-form-label fa-solid fa-calendar\"></i>\r\n                            <div className=\"col-sm-9\"> \r\n                            <input \r\n                                type=\"number\" \r\n                                name=\"edad\" \r\n                                className=\"form-control\" \r\n                                value={edad} \r\n                                onChange={ handleChange } \r\n                                placeholder=\"Edad de la mascota\"\r\n                            />\r\n                            </div>                \r\n                            <label className=\"col-sm-2 col-form-label\"> <b>Años</b></label>            \r\n                        </div> \r\n\r\n                        <hr />\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col text-center\">\r\n                                <button type=\"submit\" className=\"btn btn-success btnSubmit\">\r\n                                    Editar\r\n                                </button>\r\n                            </div>                            \r\n                        </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>                \r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './TableView.css';\r\n\r\nimport { EditMascota } from \"../EditForm/EditForm\";\r\nimport { uiOpenModal } from \"../../../actions/ui\";\r\nimport { mascotaDeleteItem, mascotaLoadItems, mascotaSetItem } from \"../../../actions/mascota\";\r\n\r\nexport const TableView = () => {\r\n\r\n    const { mascotas } = useSelector(state =>  state.mascota);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch( mascotaLoadItems() );\r\n    }, [dispatch]);\r\n\r\n    const editItem = (e) => {\r\n        dispatch(mascotaSetItem(e));\r\n        dispatch(uiOpenModal());    \r\n    }\r\n\r\n    const eliminarItem = (e) => {\r\n        dispatch(mascotaDeleteItem(e));\r\n    }\r\n\r\n    return (\r\n        <div className=\"row card card-body table-view\">\r\n            <div className=\"col\">\r\n                <h4 className=\"card-title\">Lista de Mascotas</h4>    \r\n                <table className=\"table table-bordered table-sm\">\r\n                    <thead className=\"bg-green\">\r\n                        <tr>\r\n                            <th  scope=\"col\">Nombre</th>\r\n                            <th  scope=\"col\">Dueño</th>\r\n                            <th  scope=\"col\">Edad</th>\r\n                            <th  scope=\"col\">Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {mascotas.map(mascotaItem => {\r\n                            return (\r\n                                <tr key={mascotaItem.id}>\r\n                                    <td className=\"text-center\">{mascotaItem.mascota}</td>\r\n                                    <td className=\"text-center\">{mascotaItem.dueño}</td>\r\n                                    <td className=\"text-center\">{mascotaItem.edad}</td>\r\n                                    <td>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\"> \r\n                                                <button onClick={() => {editItem(mascotaItem)}} className=\"btn btn-info mx-1 btnSubmit-2\"><i className=\"col-sm-1 col-form-label fa-solid fa-pen-to-square\"/></button>\r\n                                                <button onClick={() => {eliminarItem(mascotaItem)}} className=\"btn btn-danger mx-1 btnSubmit-2\"><i className=\"col-sm-1 col-form-label fa-solid fa-trash-can\"/></button>\r\n                                            </div>\r\n                                        </div>                              \r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <EditMascota />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className=\"navbar bg-green navbar-dark mb-4\">\r\n            <div>\r\n                <span className=\"navbar-brand\">\r\n                    <img src=\"https://cdn.pixabay.com/photo/2020/06/08/22/50/dog-5276317_960_720.png\" alt=\"\" width=\"33\" height=\"28\"/>\r\n                </span>\r\n                <span className=\"navbar-brand\">\r\n                    Mascotas\r\n                </span>\r\n            </div>            \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nimport { AddForm } from './components/mascota/AddForm/AddForm';\r\nimport { TableView } from './components/mascota/TableView/TableView';\r\nimport { Navbar } from './components/ui/Navbar';\r\n\r\nexport const Mascotas = () => {   \r\n\r\n    return (\r\n        <Provider store={ store }>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <Navbar />\r\n                </div>                \r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <TableView />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <AddForm />\r\n                    </div>              \r\n                </div>\r\n            </div>    \r\n        </Provider>        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Mascotas } from './Mascotas';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <Mascotas />, \r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}